package phobias;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.Reader;
import java.io.UnsupportedEncodingException;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.net.URLEncoder;
import java.nio.charset.Charset;
import java.util.ArrayList;
import java.util.HashMap;

import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import com.alibaba.fastjson.JSON;

@Path("/context")
public class PhobiasTreatment {

	@GET
	@Path("/getTreatment")
	@Produces(MediaType.APPLICATION_JSON)
	public Response getTreatment(@QueryParam("phobia") String phobia, @QueryParam("token") String token) throws JSONException, IOException {
	    String google = "http://ajax.googleapis.com/ajax/services/search/web?v=1.0&q=";
	    String search = phobia + "treatment";
	    String charset = "UTF-8";

	    URL url = new URL(google + URLEncoder.encode(search, charset));
	    Reader reader = new InputStreamReader(url.openStream(), charset);
//	    JSON.parse(reader,GoogleResults.class);
//	    GoogleResults results = new Gson().fromJson(reader, GoogleResults.class);
//
//	    // Show title and URL of 1st result.
//	    System.out.println(results.getResponseData().getResults().get(0).getTitle());
//	    System.out.println(results.getResponseData().getResults().get(0).getUrl());
	    
	    
	    StringBuilder sb = new StringBuilder();
		URLConnection urlConn = null;
		InputStreamReader in = null;
		try {
			urlConn = url.openConnection();
			if (urlConn != null)
				urlConn.setReadTimeout(60 * 1000);
			if (urlConn != null && urlConn.getInputStream() != null) {
				in = new InputStreamReader(urlConn.getInputStream(),
						Charset.defaultCharset());
				BufferedReader bufferedReader = new BufferedReader(in);
				if (bufferedReader != null) {
					int cp;
					while ((cp = bufferedReader.read()) != -1) {
						sb.append((char) cp);
					}
					bufferedReader.close();
				}
			}
		in.close();
		} catch (Exception e) {
			throw new RuntimeException("Exception while calling URL", e);
		} 
		JSONObject myjson = new JSONObject(sb.toString());
		JSONObject responseData = myjson.getJSONObject("responseData");
		JSONArray results = responseData.getJSONArray("results");
		
		ArrayList<HashMap<String,String>> treatments = new ArrayList<>();
//http://common-phobias.com/Macro/treatment.htm
//http://common-phobias.com/Macro/tips.htm
		for (int i=0; i<results.length(); i++) {
			JSONObject result = results.getJSONObject(i);
			HashMap<String, String> treatment = new HashMap<>();
			treatment.put("title", result.get("title").toString());
			treatment.put("url", result.get("url").toString());
			treatments.add(treatment);
		}
		
		if (phobia.toLowerCase().contains("phobia")) {
			String phobiaPrefix = phobia.replace("phobia", "");
			HashMap<String, String> treatment = new HashMap<>();
			treatment.put("title", phobia + "treatments");
			treatment.put("url", "http://common-phobias.com/"+ phobiaPrefix +"/tips.htm");
			treatments.add(treatment);
		}
	
		System.out.println(treatments);
		return Response.status(200).entity(JSON.toJSONString(treatments)).build();
	}
	
}
